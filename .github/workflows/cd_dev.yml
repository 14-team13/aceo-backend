# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CD

#dev브랜치가 push될 때 동작
on:
  push:
    branches: [ "dev" ]
    
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # 소스 체크아웃
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # Gradlew 권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # application-dev.yml 보도록 프로젝트 설정 완료함.
    - name: Build with Gradle
      if: contains(github.ref, 'dev')
      run: SPRING_PROFILES_ACTIVE=[dev] ./gradlew clean build
    
    # SCP방식으로 Deploy
    - name: Deploy use SCP
      uses: appleboy/scp-action@master
      id: deploy-dev
      if: contains(github.ref, 'dev')
      with:
        host: ${{ secrets.NPC_DEV_SERVER_IP }}
        username: ${{ secrets.NPC_DEV_SERVER_USER }}
        #key: ${{ secrets.NPC_DEV_SERVER_KEY }}
        password: ${{ secrets.NPC_DEV_SERVER_PASSWORD }}
        port: ${{ secrets.NPC_DEV_SERVER_PORT }}
        source: "./build/libs/*.jar"
        target: "~/deploy"

    # 스크립트 실행
    - name: Execute Server Init Script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NPC_DEV_SERVER_IP }}
        username: $ {{ secrets.NPC_DEV_SERVER_USER }}
        password: $ {{ secrets.NPC_DEV_SERVER_PASSWORD }}
        port: ${{ secrets.NPC_DEV_SERVER_PORT }}
        script_stop: true
        script: chmod +x ~/deploy/deploy.sh && sh ~/deploy/deploy.sh
